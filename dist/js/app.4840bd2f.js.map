{"version":3,"file":"js/app.4840bd2f.js","mappings":"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","sources":["webpack://sudoku-solver/./src/App.vue?10eb","webpack://sudoku-solver/./src/App.vue","webpack://sudoku-solver/./src/components/IconBase.vue?1e2a","webpack://sudoku-solver/./src/components/IconBase.vue","webpack://sudoku-solver/./src/components/icons/IconBack.vue","webpack://sudoku-solver/./src/components/icons/IconBack.vue?fff2","webpack://sudoku-solver/./src/components/icons/IconCheck.vue","webpack://sudoku-solver/./src/components/icons/IconCheck.vue?8d27","webpack://sudoku-solver/./src/components/SudokuBoard.vue?751f","webpack://sudoku-solver/./src/components/SudokuBoard.vue","webpack://sudoku-solver/./src/components/SudokuBoard.vue?7bb9","webpack://sudoku-solver/./src/components/HistoryLog.vue?78de","webpack://sudoku-solver/./src/components/HistoryLog.vue","webpack://sudoku-solver/./src/components/HistoryLog.vue?93a5","webpack://sudoku-solver/./src/types/Method.ts","webpack://sudoku-solver/./src/utils/arrays.ts","webpack://sudoku-solver/./src/models/ChangeLogLine.ts","webpack://sudoku-solver/./src/models/History.ts","webpack://sudoku-solver/./src/models/Cell.ts","webpack://sudoku-solver/./src/models/HiddenNs.ts","webpack://sudoku-solver/./src/composables/sudokuSolver.ts","webpack://sudoku-solver/./src/components/MainComponent.vue?84b5","webpack://sudoku-solver/./src/components/MainComponent.vue","webpack://sudoku-solver/./src/components/MainComponent.vue?45ff","webpack://sudoku-solver/./src/App.vue?7ccd","webpack://sudoku-solver/./src/store/index.ts","webpack://sudoku-solver/./src/main.ts","webpack://sudoku-solver/webpack/bootstrap","webpack://sudoku-solver/webpack/runtime/chunk loaded","webpack://sudoku-solver/webpack/runtime/compat get default export","webpack://sudoku-solver/webpack/runtime/define property getters","webpack://sudoku-solver/webpack/runtime/global","webpack://sudoku-solver/webpack/runtime/hasOwnProperty shorthand","webpack://sudoku-solver/webpack/runtime/jsonp chunk loading","webpack://sudoku-solver/webpack/startup"],"sourcesContent":["import { resolveComponent as _resolveComponent, openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_MainComponent = _resolveComponent(\"MainComponent\")!\n\n  return (_openBlock(), _createBlock(_component_MainComponent))\n}","<template>\n  <MainComponent />\n</template>\n\n<script lang=\"ts\">\nimport { Options, Vue } from 'vue-class-component'\nimport MainComponent from './components/MainComponent.vue'\n\n@Options({\n  components: {\n    MainComponent,\n  },\n})\nexport default class App extends Vue {}\n</script>\n\n<style>\n:root {\n  --accent: #0217d2;\n  --primary: black;\n  --secondary: gray;\n  --success: #66e59b;\n  --success-light: #ccf6de;\n  --warning: #faa473;\n  --warning-light: #fef3ec;\n\n  --button: #2f80ed;\n  --button-hover: #1366d6;\n  --bg-light: rgb(231 238 249);\n\n}\n\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n}\n\n.button {\n  appearance: none;\n  backface-visibility: hidden;\n  background-color: var(--button);\n  border-radius: 10px;\n  border-style: none;\n  box-shadow: none;\n  box-sizing: border-box;\n  color: #fff;\n  cursor: pointer;\n  display: inline-block;\n  font-family: Inter,-apple-system,system-ui,\"Segoe UI\",Helvetica,Arial,sans-serif;\n  font-size: 15px;\n  font-weight: 500;\n  height: 40px;\n  letter-spacing: normal;\n  line-height: 1.5;\n  outline: none;\n  overflow: hidden;\n  padding: 9px 30px;\n  position: relative;\n  text-align: center;\n  text-decoration: none;\n  transform: translate3d(0, 0, 0);\n  transition: all .3s;\n  user-select: none;\n  -webkit-user-select: none;\n  touch-action: manipulation;\n  vertical-align: top;\n  white-space: nowrap;\n}\n\n.button:hover:not(:disabled) {\n  background-color: var(--button-hover);\n  box-shadow: rgba(0, 0, 0, .05) 0 5px 30px, rgba(0, 0, 0, .05) 0 1px 4px;\n  opacity: 1;\n  transform: translateY(0);\n  transition-duration: .35s;\n}\n\n.button:hover:after {\n  opacity: .5;\n}\n\n.button:active {\n  box-shadow: rgba(0, 0, 0, .1) 0 3px 6px 0, rgba(0, 0, 0, .1) 0 0 10px 0, rgba(0, 0, 0, .1) 0 1px 4px -1px;\n  transform: translateY(2px);\n  transition-duration: .35s;\n}\n\n.button:active:after {\n  opacity: 1;\n}\n\n.button.warning {\n  background-color: var(--warning);\n}\n\nbutton:disabled,\nbutton[disabled]{\n  background-color: var(--secondary);\n  cursor: unset;\n}\n</style>\n","import { defineComponent as _defineComponent } from 'vue'\nimport { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, renderSlot as _renderSlot, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\"\n\nconst _hoisted_1 = [\"width\", \"height\", \"aria-labelledby\"]\nconst _hoisted_2 = [\"id\"]\nconst _hoisted_3 = [\"fill\"]\n\n\n\ninterface IProps {\n  iconName: string,\n  width: number,\n  height: number,\n  iconColor?: string\n}\n\n\nexport default /*@__PURE__*/_defineComponent({\n  __name: 'IconBase',\n  props: {\n    iconName: { default: 'check' },\n    width: { default: 18 },\n    height: { default: 18 },\n    iconColor: { default: 'currentColor' }\n  },\n  setup(__props: any) {\n\n\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(\"svg\", {\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: _ctx.width,\n    height: _ctx.height,\n    viewBox: \"0 0 18 18\",\n    \"aria-labelledby\": _ctx.iconName,\n    role: \"presentation\"\n  }, [\n    _createElementVNode(\"title\", {\n      id: _ctx.iconName,\n      lang: \"en\"\n    }, _toDisplayString(_ctx.iconName) + \" icon\", 9, _hoisted_2),\n    _createElementVNode(\"g\", { fill: _ctx.iconColor }, [\n      _renderSlot(_ctx.$slots, \"default\")\n    ], 8, _hoisted_3)\n  ], 8, _hoisted_1))\n}\n}\n\n})","import script from \"./IconBase.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./IconBase.vue?vue&type=script&setup=true&lang=ts\"\n\nimport \"./IconBase.vue?vue&type=style&index=0&id=e1b90a96&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-e1b90a96\"]])\n\nexport default __exports__","<template>\n  <svg fill=\"currentColor\" height=\"100%\" width=\"100%\" version=\"1.1\" id=\"Capa_1\" xmlns=\"http://www.w3.org/2000/svg\"\n    xmlns:xlink=\"http://www.w3.org/1999/xlink\" viewBox=\"0 0 26.676 26.676\" xml:space=\"preserve\">\n    <g>\n      <path d=\"M26.105,21.891c-0.229,0-0.439-0.131-0.529-0.346l0,0c-0.066-0.156-1.716-3.857-7.885-4.59\n                c-1.285-0.156-2.824-0.236-4.693-0.25v4.613c0,0.213-0.115,0.406-0.304,0.508c-0.188,0.098-0.413,0.084-0.588-0.033L0.254,13.815\n                C0.094,13.708,0,13.528,0,13.339c0-0.191,0.094-0.365,0.254-0.477l11.857-7.979c0.175-0.121,0.398-0.129,0.588-0.029\n                c0.19,0.102,0.303,0.295,0.303,0.502v4.293c2.578,0.336,13.674,2.33,13.674,11.674c0,0.271-0.191,0.508-0.459,0.562\n                C26.18,21.891,26.141,21.891,26.105,21.891z\" />\n    </g>\n  </svg>\n</template>\n","import { render } from \"./IconBack.vue?vue&type=template&id=21f1b412\"\nconst script = {}\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"100%\" width=\"100%\" viewBox=\"0 0 64 64\"\n    enable-background=\"new 0 0 64 64\">\n    <path d=\"M32,2C15.431,2,2,15.432,2,32c0,16.568,13.432,30,30,30c16.568,0,30-13.432,30-30C62,15.432,48.568,2,32,2z M25.025,50\nl-0.02-0.02L24.988,50L11,35.6l7.029-7.164l6.977,7.184l21-21.619L53,21.199L25.025,50z\" fill=\"currentColor\" />\n  </svg>\n</template>\n","import { render } from \"./IconCheck.vue?vue&type=template&id=375a4d55\"\nconst script = {}\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, normalizeClass as _normalizeClass } from \"vue\"\n\nconst _hoisted_1 = { class: \"sudoku-board\" }\nconst _hoisted_2 = [\"value\", \"onInput\"]\nconst _hoisted_3 = { key: 0 }\nconst _hoisted_4 = {\n  key: 1,\n  class: \"cell-possible-values\"\n}\nconst _hoisted_5 = { key: 0 }\n\nimport {\n  computed,\n  watch,\n} from 'vue'\n\nimport Cell from '@/models/Cell'\n\ninterface IProps {\n  modelValue: Array<Array<string>>\n  solvedField: Array<Array<Cell>>\n  lastUpdated: Array<Cell>\n  isInSolveMode: boolean\n}\n\n\nexport default /*@__PURE__*/_defineComponent({\n  __name: 'SudokuBoard',\n  props: {\n    modelValue: { default: () => [] },\n    solvedField: { default: () => [] },\n    lastUpdated: {},\n    isInSolveMode: { type: Boolean }\n  },\n  emits: [\"update:modelValue\"],\n  setup(__props: any, { emit: __emit }) {\n\nconst props = __props\n\nconst emit = __emit\n\nconst model = computed({\n  get() {\n    return props.modelValue ?? []\n  },\n  set(value: Array<Array<string>>) {\n    console.log('set triggered', value)\n    emit('update:modelValue', value)\n  },\n})\n\nconst isNumeric = (string: string) => /^[+-]?\\d+(\\.\\d+)?$/.test(string)\n\nfunction triggerUpdate(rowIdx: number, colIdx: number, event: InputEvent) {\n  const data = event.data || ''\n  if (isNumeric(data) || data === '') {\n    const newModel = model.value.map((row) => row.slice())\n    newModel[rowIdx][colIdx] = data\n    model.value = newModel\n  } else {\n    // eslint-disable-next-line no-param-reassign\n    (event.target as HTMLInputElement).value = ''\n  }\n}\n\nconst fieldLength = computed(() => model.value.length ?? 0)\n\nwatch(props, () => {\n  console.log('props', props)\n})\n\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(fieldLength.value, (rowIdx) => {\n      return (_openBlock(), _createElementBlock(\"div\", {\n        class: \"board-row\",\n        key: `row-${rowIdx}`\n      }, [\n        (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(fieldLength.value, (colIdx) => {\n          return (_openBlock(), _createElementBlock(\"div\", {\n            class: \"board-cell\",\n            key: `col-${colIdx}`\n          }, [\n            (!_ctx.isInSolveMode)\n              ? (_openBlock(), _createElementBlock(\"input\", {\n                  key: 0,\n                  value: _ctx.modelValue[rowIdx - 1][colIdx - 1],\n                  class: \"cell-value\",\n                  maxlength: \"1\",\n                  type: \"text\",\n                  onInput: event => triggerUpdate(rowIdx - 1, colIdx - 1, event as InputEvent)\n                }, null, 40, _hoisted_2))\n              : (_openBlock(), _createElementBlock(\"div\", {\n                  key: 1,\n                  class: _normalizeClass([\"cell-value solve-mode\", {\n          'active': _ctx.lastUpdated.includes(_ctx.solvedField[rowIdx - 1][colIdx - 1]),\n          'solved-cell': !_ctx.solvedField[rowIdx - 1][colIdx - 1].withPresetValue,\n          'with-options': _ctx.solvedField[rowIdx - 1][colIdx - 1].isEmpty\n        }])\n                }, [\n                  (!_ctx.solvedField[rowIdx - 1][colIdx - 1].isEmpty)\n                    ? (_openBlock(), _createElementBlock(\"span\", _hoisted_3, _toDisplayString(_ctx.solvedField[rowIdx - 1][colIdx - 1].value ?? ''), 1))\n                    : (_openBlock(), _createElementBlock(\"div\", _hoisted_4, [\n                        (_openBlock(), _createElementBlock(_Fragment, null, _renderList(10, (index) => {\n                          return _createElementVNode(\"div\", { key: index }, [\n                            (_ctx.solvedField[rowIdx - 1][colIdx - 1].possibleNumbers.includes(index))\n                              ? (_openBlock(), _createElementBlock(\"span\", _hoisted_5, _toDisplayString(index), 1))\n                              : _createCommentVNode(\"\", true)\n                          ])\n                        }), 64))\n                      ]))\n                ], 2))\n          ]))\n        }), 128))\n      ]))\n    }), 128))\n  ]))\n}\n}\n\n})","<template>\n  <div class=\"sudoku-board\">\n    <div class=\"board-row\" v-for=\"rowIdx in fieldLength\" :key=\"`row-${rowIdx}`\">\n      <div class=\"board-cell\" v-for=\"colIdx in fieldLength\" :key=\"`col-${colIdx}`\">\n        <input v-if=\"!isInSolveMode\" :value=\"modelValue[rowIdx - 1][colIdx - 1]\" class=\"cell-value\" maxlength=\"1\"\n          type=\"text\" @input=\"event => triggerUpdate(rowIdx - 1, colIdx - 1, event as InputEvent)\">\n\n        <div v-else class=\"cell-value solve-mode\" :class=\"{\n          'active': lastUpdated.includes(solvedField[rowIdx - 1][colIdx - 1]),\n          'solved-cell': !solvedField[rowIdx - 1][colIdx - 1].withPresetValue,\n          'with-options': solvedField[rowIdx - 1][colIdx - 1].isEmpty\n        }\">\n          <span v-if=\"!solvedField[rowIdx - 1][colIdx - 1].isEmpty\">{{ solvedField[rowIdx - 1][colIdx - 1].value ?? ''\n            }}</span>\n\n          <div v-else class=\"cell-possible-values\">\n            <div v-for=\"index in 10\" :key=\"index\">\n              <span v-if=\"solvedField[rowIdx - 1][colIdx - 1].possibleNumbers.includes(index)\">\n                {{ index }}\n              </span>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport {\n  computed,\n  withDefaults,\n  defineProps,\n  defineEmits,\n  watch,\n} from 'vue'\n\nimport Cell from '@/models/Cell'\n\ninterface IProps {\n  modelValue: Array<Array<string>>\n  solvedField: Array<Array<Cell>>\n  lastUpdated: Array<Cell>\n  isInSolveMode: boolean\n}\n\nconst props = withDefaults(defineProps<IProps>(), {\n  modelValue: () => [],\n  solvedField: () => [],\n  lastFound: undefined,\n})\n\nconst emit = defineEmits<{(e: 'update:modelValue', value: Array<Array<string>>): void }>()\n\nconst model = computed({\n  get() {\n    return props.modelValue ?? []\n  },\n  set(value: Array<Array<string>>) {\n    console.log('set triggered', value)\n    emit('update:modelValue', value)\n  },\n})\n\nconst isNumeric = (string: string) => /^[+-]?\\d+(\\.\\d+)?$/.test(string)\n\nfunction triggerUpdate(rowIdx: number, colIdx: number, event: InputEvent) {\n  const data = event.data || ''\n  if (isNumeric(data) || data === '') {\n    const newModel = model.value.map((row) => row.slice())\n    newModel[rowIdx][colIdx] = data\n    model.value = newModel\n  } else {\n    // eslint-disable-next-line no-param-reassign\n    (event.target as HTMLInputElement).value = ''\n  }\n}\n\nconst fieldLength = computed(() => model.value.length ?? 0)\n\nwatch(props, () => {\n  console.log('props', props)\n})\n\n</script>\n\n<style lang=\"scss\" scoped>\n.sudoku-board {\n  display: flex;\n  flex-direction: column;\n  box-shadow: 0 0 5px #888;\n  width: fit-content;\n  border: 2px solid var(--primary);\n\n  .board-row:not(:nth-child(3n)) {\n    border-bottom: 1px solid var(--secondary);\n  }\n\n  .board-row:nth-child(3n):not(:last-child) {\n    border-bottom: 2px solid var(--primary);\n  }\n}\n\n.board-row {\n  display: flex;\n  width: fit-content;\n  flex-direction: row;\n\n  .board-cell:not(:nth-child(3n)) {\n    border-right: 1px solid var(--secondary);\n  }\n\n  .board-cell:nth-child(3n):not(:last-child) {\n    border-right: 2px solid var(--primary);\n  }\n}\n\n.board-cell {\n  color: var(--primary);\n  font-family: Arial\n}\n\n.cell-value {\n  display: block;\n  box-sizing: content-box;\n  width: 45px;\n  height: 45px;\n  outline: 0;\n  font-size: 30px;\n  transition: 0.2s;\n  margin: 0;\n  outline: 0;\n  padding: 5px;\n  text-align: center;\n  border: 0;\n\n  &.solve-mode {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n  }\n\n  &.active {\n    background-color: var(--bg-light);\n  }\n\n  &.solved-cell {\n    color: var(--accent);\n  }\n\n  &.with-options {\n    color: var(--secondary);\n    font-size: 15px;\n  }\n\n  .cell-possible-values {\n    display: grid;\n    gap: 1px;\n    grid-template-columns: repeat(3, 1fr);\n    grid-template-rows: repeat(3, 1fr);\n  }\n}\n</style>\n","import script from \"./SudokuBoard.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./SudokuBoard.vue?vue&type=script&setup=true&lang=ts\"\n\nimport \"./SudokuBoard.vue?vue&type=style&index=0&id=37f29d77&lang=scss&scoped=true\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-37f29d77\"]])\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, normalizeClass as _normalizeClass } from \"vue\"\n\nconst _hoisted_1 = { class: \"history-log\" }\nconst _hoisted_2 = { class: \"elements-container\" }\nconst _hoisted_3 = { class: \"line-title\" }\nconst _hoisted_4 = { class: \"line-text\" }\nconst _hoisted_5 = { class: \"line-extra\" }\n\nimport {\n  computed,\n} from 'vue'\n\nimport HistoryLine from '@/models/HistoryLine'\n\ninterface IProps {\n  changeLog: Array<HistoryLine>\n}\n\n\nexport default /*@__PURE__*/_defineComponent({\n  __name: 'HistoryLog',\n  props: {\n    changeLog: { default: () => [] }\n  },\n  setup(__props: any) {\n\nconst props = __props\n\nconst revertedArray = computed(() => props.changeLog.slice().reverse())\n\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _cache[0] || (_cache[0] = _createElementVNode(\"p\", { class: \"title\" }, \"History\", -1)),\n    _createElementVNode(\"div\", _hoisted_2, [\n      (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(revertedArray.value, (line, idx) => {\n        return (_openBlock(), _createElementBlock(\"p\", {\n          class: _normalizeClass([\"line\", { [`${line.action}`]: true }]),\n          key: idx\n        }, [\n          _createElementVNode(\"span\", _hoisted_3, _toDisplayString(`Step ${revertedArray.value.length - idx}`), 1),\n          _createElementVNode(\"span\", _hoisted_4, _toDisplayString(`for cell [${line.cell.rowIdx + 1}, ${line.cell.columnIdx + 1}] ${line.description}`), 1),\n          _createElementVNode(\"span\", _hoisted_5, _toDisplayString(`based on: ${line.basedOn}`), 1)\n        ], 2))\n      }), 128))\n    ])\n  ]))\n}\n}\n\n})","<template>\n  <div class=\"history-log\">\n    <p class=\"title\">History</p>\n    <div class=\"elements-container\">\n      <p class=\"line\" :class=\"{ [`${line.action}`]: true }\" v-for=\"(line, idx) in revertedArray\" :key=\"idx\">\n        <span class=\"line-title\">{{ `Step ${revertedArray.length - idx}` }}</span>\n        <span class=\"line-text\">{{ `for cell [${line.cell.rowIdx + 1}, ${line.cell.columnIdx + 1}] ${line.description}`\n          }}</span>\n        <span class=\"line-extra\">{{ `based on: ${line.basedOn}` }}</span>\n      </p>\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport {\n  withDefaults,\n  defineProps,\n  computed,\n} from 'vue'\n\nimport HistoryLine from '@/models/HistoryLine'\n\ninterface IProps {\n  changeLog: Array<HistoryLine>\n}\n\nconst props = withDefaults(defineProps<IProps>(), {\n  changeLog: () => [],\n})\n\nconst revertedArray = computed(() => props.changeLog.slice().reverse())\n\n</script>\n\n<style lang=\"scss\" scoped>\n.history-log {\n  flex-grow: 1;\n}\n\n.title {\n  position: sticky;\n  font-size: 20px;\n  margin: 0;\n  padding: 8px;\n  top: 0;\n  background-color: var(--bg-light);\n}\n\n.elements-container {\n  display: flex;\n  flex-direction: column;\n  gap: 4px;\n  padding: 4px 0 0;\n  justify-content: start;\n  align-items: start;\n  text-align: start;\n}\n\n.line {\n  display: flex;\n  flex-direction: column;\n  margin: 0;\n  padding: 8px;\n  box-sizing: border-box;\n  border-radius: 10px;\n  width: 100%;\n\n  &.remove {\n    background-color: var(--warning-light);\n  }\n\n  &.update {\n    background-color: var(--success-light);\n  }\n}\n\n.line-title {\n  text-align: center;\n}\n\n.line-extra {\n  font-size: 12px;\n  color: var(--secondary);\n}\n</style>\n","import script from \"./HistoryLog.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./HistoryLog.vue?vue&type=script&setup=true&lang=ts\"\n\nimport \"./HistoryLog.vue?vue&type=style&index=0&id=7ca46b9c&lang=scss&scoped=true\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-7ca46b9c\"]])\n\nexport default __exports__","// eslint-disable-next-line no-shadow\nenum Method {\n  UpdateNotes = 'Update Notes',\n  ObviousSingles = 'Obvious Singles',\n  ObviousPairs = 'Obvious Pairs',\n  ObviousTriples = 'Obvious Triples',\n  HiddenSingles = 'Hidden Singles',\n  HiddenPairs = 'Hidden Pairs',\n  HiddenTriples = 'Hidden Triples',\n  PointingNumbers = 'Pointing Numbers',\n  XWing = 'X-Wing',\n  YWing = 'Y-Wing',\n}\n\nexport default Method\n","export function intersection(arr1: Array<number>, arr2: Array<number>) {\n  return arr1.filter((value) => arr2.includes(value))\n}\n\nexport function symmetricDifference(arr1: Array<number>, arr2: Array<number>) {\n  return [\n    ...arr1.filter((value) => !arr2.includes(value)),\n    ...arr2.filter((value) => !arr1.includes(value)),\n  ]\n}\n\nexport function unique(arr: Array<number>) {\n  return [...new Set(arr)]\n}\n\nexport function equal(arr1: Array<number>, arr2: Array<number>) {\n  if (arr1.length !== arr2.length) return false\n\n  return arr1.every((value, index) => value === arr2[index])\n}\n\nexport function getAllCommonElements(arr1: Array<number>, arr2: Array<number>): Array<number> {\n  const set1 = new Set(arr1)\n\n  return arr2.filter((element: number) => set1.has(element))\n}\n","import Cell from './Cell'\n\nclass ChangeLogLine {\n  cell: Cell\n\n  action: string\n\n  description: string\n\n  basedOn: string\n\n  constructor(cell: Cell, action: string, description: string, basedOn: string) {\n    this.cell = cell\n    this.action = action\n    this.description = description\n    this.basedOn = basedOn\n  }\n}\n\nexport default ChangeLogLine\n","import Cell from '@/models/Cell'\nimport ChangeLogLine from '@/models/ChangeLogLine'\n\nimport { ref, Ref } from 'vue'\n\ninterface HistoryState {\n  fieldState: Array<Array<Cell>>\n  changeLog: Array<ChangeLogLine>\n}\n\nclass History {\n  stack: Array<HistoryState>\n\n  currentChangeLog: Ref<Array<ChangeLogLine>>\n\n  constructor() {\n    this.stack = []\n    this.currentChangeLog = ref([])\n  }\n\n  get changeLog() {\n    return this.currentChangeLog\n  }\n\n  get fieldState() {\n    return this.stack[this.stack.length - 1].fieldState\n  }\n\n  get changeLogState() {\n    return this.stack[this.stack.length - 1].changeLog\n  }\n\n  saveToChangeLog(cell: Cell, action: string, description: string, basedOn: string) {\n    this.currentChangeLog.value.push(new ChangeLogLine(cell, action, description, basedOn))\n    console.log(this.currentChangeLog)\n  }\n\n  addNewState(field: Array<Array<Cell>>) {\n    this.stack.push({\n      fieldState: JSON.parse(JSON.stringify(field)),\n      changeLog: JSON.parse(JSON.stringify(this.currentChangeLog.value)),\n    })\n  }\n\n  backToLastState() {\n    if (this.stack.length > 1) {\n      this.stack.pop()\n    }\n    this.currentChangeLog.value = this.changeLogState\n  }\n}\n\nexport default History\n","import { intersection, unique, symmetricDifference } from '@/utils/arrays'\n\nclass Cell {\n  rowIdx: number\n\n  columnIdx: number\n\n  currentNumber: number | undefined\n\n  possibleNumbers: number[] = []\n\n  withPresetValue: boolean\n\n  saveToHistory: (cell: Cell, action: string, description: string, basedOn: string) => void\n\n  constructor(\n    rowIdx: number,\n    columnIdx: number,\n    value: string,\n    maxVal: number,\n    saveToHistory: (cell: Cell, action: string, description: string, basedOn: string) => void,\n  ) {\n    this.rowIdx = rowIdx\n    this.columnIdx = columnIdx\n    this.saveToHistory = saveToHistory\n\n    if (value !== '') {\n      this.currentNumber = Number(value)\n      this.withPresetValue = true\n    } else {\n      this.possibleNumbers = Array.from({ length: maxVal }, (_, i) => i + 1)\n      this.withPresetValue = false\n    }\n  }\n\n  get value() {\n    return this.currentNumber\n  }\n\n  get isEmpty() {\n    return this.currentNumber === undefined\n  }\n\n  get isReadyToUpdateValue() {\n    return !this.currentNumber && this.possibleNumbers.length === 1\n  }\n\n  isEqual(otherCell: Cell): boolean {\n    return (\n      this.rowIdx === otherCell.rowIdx\n      && this.columnIdx === otherCell.columnIdx\n      && this.currentNumber === otherCell.currentNumber\n      && this.possibleNumbers.length === otherCell.possibleNumbers.length\n      && this.possibleNumbers.every((num, idx) => num === otherCell.possibleNumbers[idx])\n    )\n  }\n\n  removeOccupiedValues(occupiedNumbers: number[], basedOn: string) {\n    if (!this.currentNumber) {\n      const valuesToRemove = unique(intersection(occupiedNumbers, this.possibleNumbers))\n\n      if (valuesToRemove.length) {\n        this.possibleNumbers = this.possibleNumbers.filter((el: number) => !valuesToRemove.includes(el))\n        this.saveToHistory(this, 'remove', `removed possible values: ${valuesToRemove.sort().join(', ')}`, basedOn)\n      }\n    }\n  }\n\n  setPossibleValues(values: Array<number>, basedOn: string) {\n    const valuesToRemove = symmetricDifference(this.possibleNumbers, values)\n    if (valuesToRemove.length) {\n      this.possibleNumbers = values\n\n      this.saveToHistory(this, 'remove', `removed possible values: ${valuesToRemove.sort().join(', ')}`, basedOn)\n    }\n  }\n\n  updateValue() {\n    [this.currentNumber] = this.possibleNumbers\n    this.possibleNumbers = []\n\n    this.saveToHistory(this, 'update', `set value: ${this.currentNumber}`, 'obvious singles')\n  }\n\n  setValues(currentNumber: number | undefined, possibleNumbers: number[]) {\n    this.currentNumber = currentNumber\n    this.possibleNumbers = possibleNumbers\n  }\n}\n\nexport default Cell\n","import Cell from './Cell'\n\ntype Result = {\n    numbers: Array<number>;\n\n    cells: Cell[];\n}\n\nfunction getAllUniqueNumbers(array: Array<Cell>) {\n  const allNumbers: Array<number> = []\n  array.forEach((cell: Cell) => {\n    allNumbers.push(...cell.possibleNumbers)\n  })\n  return [...new Set(allNumbers)]\n}\n\nfunction getAllPairs(cell: Cell) {\n  const allPairs: Array<[number, number]> = []\n  for (let i = 0; i < cell.possibleNumbers.length; i += 1) {\n    for (let j = i + 1; j < cell.possibleNumbers.length; j += 1) {\n      allPairs.push([cell.possibleNumbers[i], cell.possibleNumbers[j]])\n    }\n  }\n  return allPairs\n}\n\nfunction getAllTriples(cell: Cell) {\n  const allTriples: Array<[number, number, number]> = []\n  for (let i = 0; i < cell.possibleNumbers.length; i += 1) {\n    for (let j = i + 1; j < cell.possibleNumbers.length; j += 1) {\n      for (let k = j + 1; k < cell.possibleNumbers.length; k += 1) {\n        allTriples.push([cell.possibleNumbers[i], cell.possibleNumbers[j], cell.possibleNumbers[k]])\n      }\n    }\n  }\n  return allTriples\n}\n\nfunction isArrayExistsInSet(pair: Array<number>, set: Array<Array<number>>): boolean {\n  for (let i = 0; i < set.length; i += 1) {\n    if (JSON.stringify(pair) === JSON.stringify(set[i])) {\n      return true\n    }\n  }\n  return false\n}\n\nfunction getAllCommonPairs(cellX: Cell, cellY: Cell) {\n  const commonPairs: Array<[number, number]> = []\n\n  const allCellXPairs = getAllPairs(cellX)\n  const allCellYPairs = getAllPairs(cellY)\n\n  allCellXPairs.forEach((pair: [number, number]) => {\n    if (isArrayExistsInSet(pair, allCellYPairs)) {\n      commonPairs.push(pair)\n    }\n  })\n\n  return commonPairs\n}\n\nfunction getAllCommonTriples(cellX: Cell, cellY: Cell, cellZ: Cell) {\n  const commonTriples: Array<[number, number, number]> = []\n\n  const allCellXTriples = getAllTriples(cellX)\n  const allCellYTriples = getAllTriples(cellY)\n  const allCellZTriples = getAllTriples(cellZ)\n\n  allCellXTriples.forEach((triples: [number, number, number]) => {\n    if (isArrayExistsInSet(triples, allCellYTriples) && isArrayExistsInSet(triples, allCellZTriples)) {\n      commonTriples.push(triples)\n    }\n  })\n\n  return commonTriples\n}\n\nfunction isNumbersInOtherCells(array: Array<number>, cells: Array<Cell>) {\n  for (let i = 0; i < cells.length; i += 1) {\n    for (let j = 0; j < array.length; j += 1) {\n      if (cells[i].possibleNumbers.includes(array[j])) {\n        return true\n      }\n    }\n  }\n  return false\n}\n\nfunction isNumbersInCellsEqual(cellX: Cell, cellY: Cell) {\n  return JSON.stringify(cellX.possibleNumbers) === JSON.stringify(cellY.possibleNumbers)\n}\n\nfunction getCellHiddenSingle(cell: Cell, cellsToCheck: Cell[]): Result | undefined {\n  for (let i = 0; i < cell.possibleNumbers.length; i += 1) {\n    if (!isNumbersInOtherCells([cell.possibleNumbers[i]], cellsToCheck)) {\n      return {\n        numbers: [cell.possibleNumbers[i]],\n        cells: [cell],\n      }\n    }\n  }\n  return undefined\n}\n\nfunction getCellHiddenPair(cell: Cell, cellsToCheck: Cell[]): Result | undefined {\n  for (let i = 0; i < cellsToCheck.length; i += 1) {\n    const pairs = getAllCommonPairs(cell, cellsToCheck[i])\n\n    for (let j = 0; j < pairs.length; j += 1) {\n      if (!isNumbersInOtherCells(pairs[j], cellsToCheck.filter((el) => el !== cellsToCheck[i]))) {\n        return {\n          numbers: pairs[j],\n          cells: [cell, cellsToCheck[i]],\n        }\n      }\n    }\n  }\n  return undefined\n}\n\nfunction getCellHiddenTriple(cell: Cell, cellsToCheck: Cell[]): Result | undefined {\n  for (let i = 0; i < cellsToCheck.length; i += 1) {\n    for (let j = i + 1; j < cellsToCheck.length; j += 1) {\n      const triples = getAllCommonTriples(cell, cellsToCheck[i], cellsToCheck[j])\n\n      for (let k = 0; k < triples.length; k += 1) {\n        if (!isNumbersInOtherCells(triples[k], cellsToCheck.filter((el) => el !== cellsToCheck[i] && el !== cellsToCheck[j]))) {\n          return {\n            numbers: triples[k],\n            cells: [cell, cellsToCheck[i], cellsToCheck[j]],\n          }\n        }\n      }\n    }\n  }\n  return undefined\n}\n\nfunction getCellObviousPair(cell: Cell, cellsToCheck: Cell[]): Result | undefined {\n  if (cell.possibleNumbers.length === 2) {\n    for (let i = 0; i < cellsToCheck.length; i += 1) {\n      if (isNumbersInCellsEqual(cell, cellsToCheck[i])) {\n        return {\n          numbers: cell.possibleNumbers,\n          cells: [cell, cellsToCheck[i]],\n        }\n      }\n    }\n  }\n  return undefined\n}\n\nfunction getCellObviousTriple(cell: Cell, cellsToCheck: Cell[]): Result | undefined {\n  for (let i = 0; i < cellsToCheck.length; i += 1) {\n    for (let j = i + 1; j < cellsToCheck.length; j += 1) {\n      const allUniqueNumbers = getAllUniqueNumbers([cell, cellsToCheck[i], cellsToCheck[j]])\n\n      if (allUniqueNumbers.length === 3) {\n        return {\n          numbers: allUniqueNumbers,\n          cells: [cell, cellsToCheck[i], cellsToCheck[j]],\n        }\n      }\n    }\n  }\n  return undefined\n}\n\nclass HiddenNs {\n  static getCellHiddenNs(cell: Cell, cellsToCheck: Array<Cell>, n: number): Result | undefined {\n    switch (n) {\n      case 1: {\n        return getCellHiddenSingle(cell, cellsToCheck)\n      }\n      case 2: {\n        return getCellHiddenPair(cell, cellsToCheck)\n      }\n      case 3: {\n        return getCellHiddenTriple(cell, cellsToCheck)\n      }\n      default: {\n        console.log('getCellHiddenNs no possible options')\n      }\n    }\n    return undefined\n  }\n\n  static getCellObviousNs(cell: Cell, cellsToCheck: Array<Cell>, n: number): Result | undefined {\n    switch (n) {\n      case 2: {\n        return getCellObviousPair(cell, cellsToCheck)\n      }\n      case 3: {\n        return getCellObviousTriple(cell, cellsToCheck)\n      }\n      default: {\n        console.log('getCellObviousNs no possible options')\n      }\n    }\n    return undefined\n  }\n\n  static isNumberInSquareJustAtTheSameRow(number: number, cell: Cell, cellsToCheck: Array<Cell>): boolean {\n    for (let i = 0; i < cellsToCheck.length; i += 1) {\n      if (cellsToCheck[i].rowIdx !== cell.rowIdx) {\n        if (cellsToCheck[i].possibleNumbers.includes(number)) {\n          return false\n        }\n      }\n    }\n    return true\n  }\n\n  static isNumberInSquareJustAtTheSameColumn(number: number, cell: Cell, cellsToCheck: Array<Cell>): boolean {\n    for (let i = 0; i < cellsToCheck.length; i += 1) {\n      if (cellsToCheck[i].columnIdx !== cell.columnIdx) {\n        if (cellsToCheck[i].possibleNumbers.includes(number)) {\n          return false\n        }\n      }\n    }\n    return true\n  }\n\n  static isNumberInOtherCells(number: number, cellsToCheck: Array<Cell>) {\n    for (let i = 0; i < cellsToCheck.length; i += 1) {\n      if (cellsToCheck[i].possibleNumbers.includes(number)) {\n        return true\n      }\n    }\n    return false\n  }\n}\n\nexport default HiddenNs\n","import {\n  reactive, toRefs, Ref,\n} from 'vue'\nimport { getAllCommonElements } from '@/utils/arrays'\n\nimport Method from '@/types/Method'\nimport ExecutedMethodsData from '@/types/ExecutedMethodsData'\nimport ImplementedMethod from '@/types/ImplementedMethod'\nimport History from '@/models/History'\nimport ChangeLogLine from '@/models/ChangeLogLine'\nimport Cell from '@/models/Cell'\nimport HiddenNs from '@/models/HiddenNs'\n\ntype State = {\n  field: Array<Array<Cell>>\n  isSolved: boolean\n}\n\nconst state = reactive<State>({\n  field: [],\n  isSolved: false,\n})\n\nexport interface SudokuSolverComposable {\n  implementedMethods: Array<ImplementedMethod>\n  isSolved: Ref<boolean>\n  field: Ref<Array<Array<Cell>>>\n  changeLog: Ref<Array<ChangeLogLine>>\n  executeMethodsSequentially(): ExecutedMethodsData,\n  useMethod(methodKey: Method): void\n  initSudokuSolver(fieldData: Array<Array<string>>): void\n  backToLastState(): void\n}\n\nexport function useSudokuSolverComposable(): SudokuSolverComposable {\n  const historyLog = new History()\n  const fieldLength = 9\n  const squareLength = 3\n  const implementedMethods = [\n    {\n      key: Method.UpdateNotes,\n      links: ['https://sudoku.com/sudoku-rules/notes-in-sudoku/'],\n    },\n    {\n      key: Method.ObviousSingles,\n      links: ['https://sudoku.com/sudoku-rules/obvious-singles/'],\n    },\n    {\n      key: Method.ObviousPairs,\n      links: ['https://sudoku.com/sudoku-rules/obvious-pairs/'],\n    },\n    {\n      key: Method.ObviousTriples,\n      links: ['https://sudoku.com/sudoku-rules/obvious-triples/'],\n    },\n    {\n      key: Method.HiddenSingles,\n      links: ['https://sudoku.com/sudoku-rules/hidden-singles/'],\n    },\n    {\n      key: Method.HiddenPairs,\n      links: ['https://sudoku.com/sudoku-rules/hidden-pairs/'],\n    },\n    {\n      key: Method.HiddenTriples,\n      links: ['https://sudoku.com/sudoku-rules/hidden-triples/'],\n    },\n    {\n      key: Method.PointingNumbers,\n      links: ['https://sudoku.com/sudoku-rules/pointing-pairs/', 'https://sudoku.com/sudoku-rules/pointing-triples/'],\n    },\n    {\n      key: Method.XWing,\n      links: ['https://sudoku.com/sudoku-rules/h-wing/'],\n    },\n    {\n      key: Method.YWing,\n      links: ['https://sudoku.com/sudoku-rules/y-wing/'],\n    },\n  ]\n\n  // utils\n  function isSolved() {\n    for (let i = 0; i < fieldLength; i += 1) {\n      for (let j = 0; j < fieldLength; j += 1) {\n        if (!state.field[i][j].value) {\n          return false\n        }\n      }\n    }\n    return true\n  }\n\n  function findCellsSquareFirstRow(cell: Cell) {\n    return cell.rowIdx - (cell.rowIdx % squareLength)\n  }\n\n  function findCellsSquareFirstColumn(cell: Cell) {\n    return cell.columnIdx - (cell.columnIdx % squareLength)\n  }\n\n  function isAtTheSameRow(cells: Array<Cell>): boolean {\n    for (let i = 1; i < cells.length; i += 1) {\n      if (cells[i].rowIdx !== cells[0].rowIdx) {\n        return true\n      }\n    }\n    return true\n  }\n\n  function isAtTheSameColumn(cells: Array<Cell>): boolean {\n    for (let i = 1; i < cells.length; i += 1) {\n      if (cells[i].columnIdx !== cells[0].columnIdx) {\n        return true\n      }\n    }\n    return true\n  }\n\n  function getSquareEmptyCells(cell: Cell, exceptSelected: boolean): Array<Cell> {\n    const squareFirstRow = findCellsSquareFirstRow(cell)\n    const squareFirstColumn = findCellsSquareFirstColumn(cell)\n    const squareEmptyCells: Cell[] = []\n\n    for (let i = squareFirstRow; i < squareFirstRow + squareLength; i += 1) {\n      for (let j = squareFirstColumn; j < squareFirstColumn + squareLength; j += 1) {\n        if (state.field[i][j].isEmpty) {\n          if ((exceptSelected && (state.field[i][j] !== cell)) || !exceptSelected) {\n            squareEmptyCells.push(state.field[i][j])\n          }\n        }\n      }\n    }\n    return squareEmptyCells\n  }\n\n  function isFieldChanged() {\n    return JSON.stringify(historyLog.fieldState) !== JSON.stringify(state.field)\n  }\n\n  function getLastUpdatedCells(): Array<Cell> {\n    const updatedCells: Array<Cell> = []\n\n    for (let i = 0; i < fieldLength; i += 1) {\n      for (let j = 0; j < fieldLength; j += 1) {\n        if (!state.field[i][j].isEqual(historyLog.fieldState[i][j])) {\n          updatedCells.push(state.field[i][j])\n        }\n      }\n    }\n\n    return updatedCells\n  }\n\n  // removing cell impossible numbers\n  // base on existed numbers in row/column/square\n  function checkCellSurroundings(cell: Cell) {\n    const occupiedNumbers: number[] = []\n\n    for (let i = 0; i < fieldLength; i += 1) {\n      const rowValue = state.field[cell.rowIdx][i].value\n      const colValue = state.field[i][cell.columnIdx].value\n\n      if (rowValue !== undefined) {\n        occupiedNumbers.push(rowValue)\n      }\n\n      if (colValue !== undefined) {\n        occupiedNumbers.push(colValue)\n      }\n    }\n\n    // check square\n    const squareFirstRow = findCellsSquareFirstRow(cell)\n    const squareFirstColumn = findCellsSquareFirstColumn(cell)\n\n    for (let i = squareFirstRow; i < squareFirstRow + squareLength; i += 1) {\n      for (let j = squareFirstColumn; j < squareFirstColumn + squareLength; j += 1) {\n        const cellValue = state.field[i][j].value\n\n        if (cellValue !== undefined) {\n          occupiedNumbers.push(cellValue)\n        }\n      }\n    }\n\n    cell.removeOccupiedValues(occupiedNumbers, 'existed values in row, column and square')\n  }\n\n  function checkAllCellsSurroundings() {\n    for (let i = 0; i < fieldLength; i += 1) {\n      for (let j = 0; j < fieldLength; j += 1) {\n        if (!state.field[i][j].value) {\n          checkCellSurroundings(state.field[i][j])\n        }\n      }\n    }\n  }\n\n  function checkForHiddenNs(cell: Cell, n: number) {\n    const rowCellsToCheck: Cell[] = []\n    const columnCellsToCheck: Cell[] = []\n    const squareCellsToCheck: Cell[] = []\n\n    // get all row and column cells to check\n    for (let i = 0; i < fieldLength; i += 1) {\n      if (state.field[cell.rowIdx][i].value === undefined && state.field[cell.rowIdx][i] !== cell\n        && (cell.possibleNumbers.length >= n || state.field[cell.rowIdx][i].possibleNumbers.length >= n)) {\n        rowCellsToCheck.push(state.field[cell.rowIdx][i])\n      }\n\n      if (state.field[i][cell.columnIdx].value === undefined && state.field[i][cell.columnIdx] !== cell\n        && (cell.possibleNumbers.length >= n || state.field[i][cell.columnIdx].possibleNumbers.length >= n)) {\n        columnCellsToCheck.push(state.field[i][cell.columnIdx])\n      }\n    }\n\n    const rowHiddenN = HiddenNs.getCellHiddenNs(cell, rowCellsToCheck, n)\n\n    if (rowHiddenN) {\n      rowHiddenN.cells.forEach((pairedCell: Cell) => {\n        pairedCell.setPossibleValues(rowHiddenN.numbers, `hidden ${n}`)\n      })\n      return\n    }\n\n    const columnHiddenN = HiddenNs.getCellHiddenNs(cell, columnCellsToCheck, n)\n\n    if (columnHiddenN) {\n      columnHiddenN.cells.forEach((pairedCell: Cell) => {\n        pairedCell.setPossibleValues(columnHiddenN.numbers, `hidden ${n}`)\n      })\n      return\n    }\n\n    // get all square cells to check\n    const squareFirstRow = findCellsSquareFirstRow(cell)\n    const squareFirstColumn = findCellsSquareFirstColumn(cell)\n\n    for (let i = squareFirstRow; i < squareFirstRow + squareLength; i += 1) {\n      for (let j = squareFirstColumn; j < squareFirstColumn + squareLength; j += 1) {\n        if (state.field[i][j].value === undefined && state.field[i][j] !== cell\n          && (cell.possibleNumbers.length >= n || state.field[i][j].possibleNumbers.length >= n)) {\n          squareCellsToCheck.push(state.field[i][j])\n        }\n      }\n    }\n\n    const squareHiddenN = HiddenNs.getCellHiddenNs(cell, squareCellsToCheck, n)\n\n    if (squareHiddenN) {\n      squareHiddenN.cells.forEach((pairedCell: Cell) => {\n        pairedCell.setPossibleValues(squareHiddenN.numbers, `hidden ${n}`)\n      })\n    }\n  }\n\n  function checkForObviousNs(cell: Cell, n: number) {\n    if (n === 1) {\n      if (cell.isReadyToUpdateValue) {\n        cell.updateValue()\n      }\n      return\n    }\n\n    const rowCellsToCheck: Cell[] = []\n    const columnCellsToCheck: Cell[] = []\n    const squareCellsToCheck: Cell[] = []\n\n    // get all row and column cells to check\n    for (let i = 0; i < fieldLength; i += 1) {\n      if (state.field[cell.rowIdx][i].value === undefined && state.field[cell.rowIdx][i] !== cell) {\n        rowCellsToCheck.push(state.field[cell.rowIdx][i])\n      }\n\n      if (state.field[i][cell.columnIdx].value === undefined && state.field[i][cell.columnIdx] !== cell) {\n        columnCellsToCheck.push(state.field[i][cell.columnIdx])\n      }\n    }\n\n    const rowObviousN = HiddenNs.getCellObviousNs(cell, rowCellsToCheck, n)\n\n    if (rowObviousN) {\n      rowCellsToCheck.forEach((otherCell: Cell) => {\n        if (!rowObviousN.cells.includes(otherCell)) {\n          otherCell.removeOccupiedValues(rowObviousN.numbers, `obvious ${n}`)\n        }\n      })\n      return\n    }\n\n    const columnObviousN = HiddenNs.getCellObviousNs(cell, columnCellsToCheck, n)\n\n    if (columnObviousN) {\n      columnCellsToCheck.forEach((otherCell: Cell) => {\n        if (!columnObviousN.cells.includes(otherCell)) {\n          otherCell.removeOccupiedValues(columnObviousN.numbers, `obvious ${n}`)\n        }\n      })\n      return\n    }\n\n    // get all square cells to check\n    const squareFirstRow = findCellsSquareFirstRow(cell)\n    const squareFirstColumn = findCellsSquareFirstColumn(cell)\n\n    for (let i = squareFirstRow; i < squareFirstRow + squareLength; i += 1) {\n      for (let j = squareFirstColumn; j < squareFirstColumn + squareLength; j += 1) {\n        if (state.field[i][j].value === undefined && state.field[i][j] !== cell) {\n          squareCellsToCheck.push(state.field[i][j])\n        }\n      }\n    }\n\n    const squareObviousN = HiddenNs.getCellObviousNs(cell, squareCellsToCheck, n)\n\n    if (squareObviousN) {\n      squareCellsToCheck.forEach((otherCell: Cell) => {\n        if (!squareObviousN.cells.includes(otherCell)) {\n          otherCell.removeOccupiedValues(squareObviousN.numbers, `obvious ${n}`)\n        }\n      })\n    }\n  }\n\n  // if number in square exist just in one row/column\n  // then remove this number from other row/column cells, that are not in square\n  function checkForPointingNumbers(cell: Cell) {\n    const squareCellsToCheck: Cell[] = []\n\n    const squareFirstRow = findCellsSquareFirstRow(cell)\n    const squareFirstColumn = findCellsSquareFirstColumn(cell)\n\n    for (let i = squareFirstRow; i < squareFirstRow + squareLength; i += 1) {\n      for (let j = squareFirstColumn; j < squareFirstColumn + squareLength; j += 1) {\n        if (state.field[i][j].value === undefined && !(i === cell.rowIdx && j === cell.columnIdx)) {\n          squareCellsToCheck.push(state.field[i][j])\n        }\n      }\n    }\n\n    for (let i = 0; i < cell.possibleNumbers.length; i += 1) {\n      if (HiddenNs.isNumberInSquareJustAtTheSameRow(cell.possibleNumbers[i], cell, squareCellsToCheck)) {\n        for (let j = 0; j < fieldLength; j += 1) {\n          if (state.field[cell.rowIdx][j].value === undefined\n            && (j < squareFirstColumn || j > squareFirstColumn + squareLength)\n            && state.field[cell.rowIdx][j].possibleNumbers.includes(cell.possibleNumbers[i])) {\n            state.field[cell.rowIdx][j].removeOccupiedValues([cell.possibleNumbers[i]], 'PointingNumbers')\n          }\n        }\n      }\n    }\n\n    for (let i = 0; i < cell.possibleNumbers.length; i += 1) {\n      if (HiddenNs.isNumberInSquareJustAtTheSameColumn(cell.possibleNumbers[i], cell, squareCellsToCheck)) {\n        for (let j = 0; j < fieldLength; j += 1) {\n          if (state.field[j][cell.columnIdx].value === undefined\n            && (j < squareFirstRow || j > squareFirstRow + squareLength)\n            && state.field[j][cell.columnIdx].possibleNumbers.includes(cell.possibleNumbers[i])) {\n            state.field[j][cell.columnIdx].removeOccupiedValues([cell.possibleNumbers[i]], 'PointingNumbers')\n          }\n        }\n      }\n    }\n  }\n\n  function checkWithXWingRows(cellXX: Cell) {\n    const rowXAllEmptyCells: Cell[] = []\n    const rowXCellsToCheck: Cell[] = []\n\n    // get all X row empty cells(except selected)\n    for (let l = 0; l < fieldLength; l += 1) {\n      if (state.field[cellXX.rowIdx][l].isEmpty && state.field[cellXX.rowIdx][l] !== cellXX) {\n        rowXAllEmptyCells.push(state.field[cellXX.rowIdx][l])\n        if (l > cellXX.columnIdx) {\n          rowXCellsToCheck.push(state.field[cellXX.rowIdx][l])\n        }\n      }\n    }\n\n    if (!rowXCellsToCheck.length) {\n      return\n    }\n\n    for (let i = 0; i < cellXX.possibleNumbers.length; i += 1) {\n      for (let j = cellXX.rowIdx + 1; j < fieldLength; j += 1) {\n        const cellYX = state.field[j][cellXX.columnIdx]\n\n        if (cellYX.isEmpty && cellYX.possibleNumbers.includes(cellXX.possibleNumbers[i])) {\n          const rowYAllEmptyCells: Cell[] = []\n\n          // get all Y row empty cells(except selected)\n          for (let l = 0; l < fieldLength; l += 1) {\n            if (state.field[j][l].isEmpty && state.field[j][l] !== cellYX) {\n              rowYAllEmptyCells.push(state.field[j][l])\n            }\n          }\n\n          for (let k = 0; k < rowXCellsToCheck.length; k += 1) {\n            const cellXY = rowXCellsToCheck[k]\n            const cellYY = state.field[j][rowXCellsToCheck[k].columnIdx]\n\n            if (cellYY.isEmpty\n                && cellXY.possibleNumbers.includes(cellXX.possibleNumbers[i])\n                && cellYY.possibleNumbers.includes(cellXX.possibleNumbers[i])\n                && !HiddenNs.isNumberInOtherCells(\n                  cellXX.possibleNumbers[i],\n                  rowXAllEmptyCells.filter((el: Cell) => el !== cellXY),\n                )\n                && !HiddenNs.isNumberInOtherCells(\n                  cellXX.possibleNumbers[i],\n                  rowYAllEmptyCells.filter((el: Cell) => el !== cellYY),\n                )\n            ) {\n              // пройтись по колонке cellXX и cellXY и убрать из них cell.possibleNumbers[i]\n              for (let m = 0; m < fieldLength; m += 1) {\n                if (state.field[m][cellXX.columnIdx].isEmpty\n                  && state.field[m][cellXX.columnIdx] !== cellXX\n                  && state.field[m][cellXX.columnIdx] !== cellYX) {\n                  state.field[m][cellXX.columnIdx].removeOccupiedValues([cellXX.possibleNumbers[i]], 'X-wing row')\n                }\n\n                if (state.field[m][cellXY.columnIdx].isEmpty\n                  && state.field[m][cellXY.columnIdx] !== cellXY\n                  && state.field[m][cellXY.columnIdx] !== cellYY) {\n                  state.field[m][cellXY.columnIdx].removeOccupiedValues([cellXX.possibleNumbers[i]], 'X-wing row')\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n\n  function checkWithXWingColumns(cellXX: Cell) {\n    const columnXAllEmptyCells: Cell[] = []\n    const columnXCellsToCheck: Cell[] = []\n\n    // get all X column empty cells(except selected)\n    for (let l = 0; l < fieldLength; l += 1) {\n      if (state.field[l][cellXX.columnIdx].isEmpty && state.field[l][cellXX.columnIdx] !== cellXX) {\n        columnXAllEmptyCells.push(state.field[l][cellXX.columnIdx])\n        if (l > cellXX.columnIdx) {\n          columnXCellsToCheck.push(state.field[l][cellXX.columnIdx])\n        }\n      }\n    }\n\n    if (!columnXCellsToCheck.length) {\n      return\n    }\n\n    for (let i = 0; i < cellXX.possibleNumbers.length; i += 1) {\n      for (let j = cellXX.columnIdx + 1; j < fieldLength; j += 1) {\n        const cellXY = state.field[cellXX.rowIdx][j]\n\n        if (cellXY.isEmpty && cellXY.possibleNumbers.includes(cellXX.possibleNumbers[i])) {\n          const columnYAllEmptyCells: Cell[] = []\n\n          // get all Y column empty cells(except selected)\n          for (let l = 0; l < fieldLength; l += 1) {\n            if (state.field[l][j].isEmpty && state.field[l][j] !== cellXY) {\n              columnYAllEmptyCells.push(state.field[l][j])\n            }\n          }\n\n          for (let k = 0; k < columnXCellsToCheck.length; k += 1) {\n            const cellYX = columnXCellsToCheck[k]\n            const cellYY = state.field[columnXCellsToCheck[k].rowIdx][j]\n\n            if (cellYY.isEmpty\n                && cellYX.possibleNumbers.includes(cellXX.possibleNumbers[i])\n                && cellYY.possibleNumbers.includes(cellXX.possibleNumbers[i])\n                && !HiddenNs.isNumberInOtherCells(\n                  cellXX.possibleNumbers[i],\n                  columnXAllEmptyCells.filter((el: Cell) => el !== cellYX),\n                )\n                && !HiddenNs.isNumberInOtherCells(\n                  cellXX.possibleNumbers[i],\n                  columnYAllEmptyCells.filter((el: Cell) => el !== cellYY),\n                )\n            ) {\n              // пройтись по cтроке cellXX и cellYX и убрать из них cell.possibleNumbers[i]\n              for (let m = 0; m < fieldLength; m += 1) {\n                if (state.field[cellXX.rowIdx][m].isEmpty\n                  && state.field[cellXX.rowIdx][m] !== cellXX\n                  && state.field[cellXX.rowIdx][m] !== cellXY) {\n                  state.field[cellXX.rowIdx][m].removeOccupiedValues([cellXX.possibleNumbers[i]], 'X-wing column')\n                }\n\n                if (state.field[cellYX.rowIdx][m].isEmpty\n                  && state.field[cellYX.rowIdx][m] !== cellYX\n                  && state.field[cellYX.rowIdx][m] !== cellYY) {\n                  state.field[cellYX.rowIdx][m].removeOccupiedValues([cellXX.possibleNumbers[i]], 'X-wing column')\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n\n  // if number exists on two cell on row/column\n  // and at the two parallel cells on another row/column\n  function checkWithXWing(cellXX: Cell) {\n    checkWithXWingRows(cellXX)\n    checkWithXWingColumns(cellXX)\n  }\n\n  function checkWithYWing(pivotCell: Cell) {\n    if (pivotCell.possibleNumbers.length !== 2) {\n      return\n    }\n    const squareEmptyCells = getSquareEmptyCells(pivotCell, true)\n\n    const rowPincerCells: Cell[] = []\n    const columnPincerCells: Cell[] = []\n    const squarePincerCells = squareEmptyCells.filter((element: Cell) => element.possibleNumbers.length === 2\n      && getAllCommonElements(pivotCell.possibleNumbers, element.possibleNumbers).length === 1)\n\n    for (let l = 0; l < fieldLength; l += 1) {\n      if (l > pivotCell.columnIdx) {\n        if (state.field[pivotCell.rowIdx][l].isEmpty && state.field[pivotCell.rowIdx][l].possibleNumbers.length === 2\n            && getAllCommonElements(pivotCell.possibleNumbers, state.field[pivotCell.rowIdx][l].possibleNumbers).length === 1\n        ) {\n          rowPincerCells.push(state.field[pivotCell.rowIdx][l])\n        }\n      }\n\n      if (l > pivotCell.rowIdx) {\n        if (state.field[l][pivotCell.columnIdx].isEmpty && state.field[l][pivotCell.columnIdx].possibleNumbers.length === 2\n          && getAllCommonElements(pivotCell.possibleNumbers, state.field[l][pivotCell.columnIdx].possibleNumbers).length === 1) {\n          columnPincerCells.push(state.field[l][pivotCell.columnIdx])\n        }\n      }\n    }\n\n    // проверяем на пересечении строки и столбца\n    if (rowPincerCells.length && columnPincerCells.length) {\n      for (let i = 0; i < rowPincerCells.length; i += 1) {\n        for (let j = 0; j < columnPincerCells.length; j += 1) {\n          const commonElementsWithPivot = getAllCommonElements(rowPincerCells[i].possibleNumbers, pivotCell.possibleNumbers)\n          const commonElements = getAllCommonElements(rowPincerCells[i].possibleNumbers, columnPincerCells[j].possibleNumbers)\n          if (commonElements.length === 1 && commonElements[0] !== commonElementsWithPivot[0]) {\n            state.field[rowPincerCells[i].columnIdx][columnPincerCells[j].rowIdx]\n              .removeOccupiedValues(commonElements, 'Y-wing column/row intersection')\n            return\n          }\n        }\n      }\n    }\n\n    // проверяем на пересечении строки и блока\n    if (rowPincerCells.length && squarePincerCells.length) {\n      for (let i = 0; i < rowPincerCells.length; i += 1) {\n        for (let j = 0; j < squarePincerCells.length; j += 1) {\n          const commonElementsWithPivot = getAllCommonElements(rowPincerCells[i].possibleNumbers, pivotCell.possibleNumbers)\n          const commonElements = getAllCommonElements(rowPincerCells[i].possibleNumbers, squarePincerCells[j].possibleNumbers)\n          if (commonElements.length === 1 && commonElements[0] !== commonElementsWithPivot[0]\n            && !isAtTheSameRow([rowPincerCells[i], squarePincerCells[j], pivotCell])) {\n            const pivotCellSquareCellsToCheck = squareEmptyCells.filter((element: Cell) => element !== squarePincerCells[j])\n            const rowCellSquareCellsToCheck = getSquareEmptyCells(rowPincerCells[i], true)\n\n            pivotCellSquareCellsToCheck.concat(rowCellSquareCellsToCheck).forEach((element: Cell) => {\n              element.removeOccupiedValues(commonElements, 'Y-wing row/square intersection')\n            })\n            return\n          }\n        }\n      }\n    }\n\n    // проверяем на пересечении столбца и блока\n    if (columnPincerCells.length && squarePincerCells.length) {\n      for (let i = 0; i < columnPincerCells.length; i += 1) {\n        for (let j = 0; j < squarePincerCells.length; j += 1) {\n          const commonElementsWithPivot = getAllCommonElements(columnPincerCells[i].possibleNumbers, pivotCell.possibleNumbers)\n          const commonElements = getAllCommonElements(columnPincerCells[i].possibleNumbers, squarePincerCells[j].possibleNumbers)\n          if (commonElements.length === 1 && commonElements[0] !== commonElementsWithPivot[0]\n            && !isAtTheSameColumn([columnPincerCells[i], squarePincerCells[j], pivotCell])) {\n            const pivotCellSquareCellsToCheck = squareEmptyCells.filter((element: Cell) => element !== squarePincerCells[j])\n            const columnCellSquareCellsToCheck = getSquareEmptyCells(columnPincerCells[i], true)\n\n            pivotCellSquareCellsToCheck.concat(columnCellSquareCellsToCheck).forEach((element: Cell) => {\n              element.removeOccupiedValues(commonElements, 'Y-wing column/square intersection')\n            })\n            return\n          }\n        }\n      }\n    }\n  }\n\n  function useMethod(methodKey: Method): Array<Cell> {\n    let lastUpdatedCells: Array<Cell> = []\n    if (methodKey === Method.UpdateNotes) {\n      checkAllCellsSurroundings()\n    } else {\n      for (let i = 0; i < fieldLength; i += 1) {\n        for (let j = 0; j < fieldLength; j += 1) {\n          const cell = state.field[i][j]\n          if (cell.isEmpty) {\n            if (methodKey === Method.ObviousSingles) {\n              checkForObviousNs(cell, 1)\n            } else if (methodKey === Method.ObviousPairs) {\n              checkForObviousNs(cell, 2)\n            } else if (methodKey === Method.ObviousTriples) {\n              checkForObviousNs(cell, 3)\n            } else if (methodKey === Method.HiddenSingles) {\n              checkForHiddenNs(cell, 1)\n            } else if (methodKey === Method.HiddenPairs) {\n              checkForHiddenNs(cell, 2)\n            } else if (methodKey === Method.HiddenTriples) {\n              checkForHiddenNs(cell, 3)\n            } else if (methodKey === Method.PointingNumbers) {\n              checkForPointingNumbers(cell)\n            } else if (methodKey === Method.XWing) {\n              checkWithXWing(cell)\n            } else if (methodKey === Method.YWing) {\n              checkWithYWing(cell)\n            }\n          }\n        }\n      }\n    }\n\n    if (isFieldChanged()) {\n      lastUpdatedCells = getLastUpdatedCells()\n      historyLog.addNewState(state.field)\n      state.isSolved = isSolved()\n    }\n    return lastUpdatedCells\n  }\n\n  function executeMethodsSequentially(): ExecutedMethodsData {\n    const methodKeys = Object.values(Method)\n    const executedMethods: ExecutedMethodsData = {} as ExecutedMethodsData\n\n    methodKeys.some((method) => {\n      const updatedCells = useMethod(method)\n      executedMethods[method] = updatedCells\n\n      if (updatedCells.length) {\n        return true\n      }\n      return false\n    })\n    return executedMethods\n  }\n\n  function saveToChangeLog(cell: Cell, action: string, description: string, basedOn: string) {\n    historyLog.saveToChangeLog(cell, action, description, basedOn)\n  }\n\n  function backToLastState() {\n    state.isSolved = false\n    historyLog.backToLastState()\n\n    for (let i = 0; i < fieldLength; i += 1) {\n      for (let j = 0; j < fieldLength; j += 1) {\n        state.field[i][j].setValues(historyLog.fieldState[i][j].currentNumber, historyLog.fieldState[i][j].possibleNumbers)\n      }\n    }\n  }\n\n  function initSudokuSolver(fieldData: Array<Array<string>>) {\n    fieldData.forEach((fieldRow, rowIdx: number) => {\n      const row: Array<Cell> = []\n\n      fieldRow.forEach((cellValue: string, columnIdx: number) => {\n        row.push(new Cell(rowIdx, columnIdx, cellValue, fieldLength, saveToChangeLog))\n      })\n\n      state.field.push(row)\n    })\n\n    historyLog.addNewState(state.field)\n  }\n\n  return {\n    implementedMethods,\n    useMethod,\n    executeMethodsSequentially,\n    initSudokuSolver,\n    backToLastState,\n    changeLog: historyLog.changeLog,\n    ...toRefs(state),\n  }\n}\n","import { defineComponent as _defineComponent } from 'vue'\nimport { createElementVNode as _createElementVNode, unref as _unref, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, withCtx as _withCtx, renderList as _renderList, Fragment as _Fragment, normalizeClass as _normalizeClass, createBlock as _createBlock, toDisplayString as _toDisplayString } from \"vue\"\n\nconst _hoisted_1 = { class: \"page\" }\nconst _hoisted_2 = { class: \"content main\" }\nconst _hoisted_3 = { class: \"board-container\" }\nconst _hoisted_4 = { class: \"methods-container\" }\nconst _hoisted_5 = {\n  key: 1,\n  class: \"controls\"\n}\nconst _hoisted_6 = [\"disabled\"]\nconst _hoisted_7 = { class: \"method-status\" }\nconst _hoisted_8 = [\"href\"]\nconst _hoisted_9 = { key: 2 }\nconst _hoisted_10 = {\n  key: 0,\n  class: \"content history\"\n}\n\nimport { ref, Ref, computed } from 'vue'\nimport IconBase from '@/components/IconBase.vue'\nimport IconBack from '@/components/icons/IconBack.vue'\nimport IconCheck from '@/components/icons/IconCheck.vue'\nimport SudokuBoard from '@/components/SudokuBoard.vue'\nimport HistoryLog from '@/components/HistoryLog.vue'\nimport { useSudokuSolverComposable } from '@/composables/sudokuSolver'\n\n// import Method from '@/types/Method'\nimport ExecutedMethodsData from '@/types/ExecutedMethodsData'\n\n\nexport default /*@__PURE__*/_defineComponent({\n  __name: 'MainComponent',\n  setup(__props) {\n\nconst {\n  isSolved,\n  field: resultField,\n  initSudokuSolver,\n  executeMethodsSequentially,\n  backToLastState,\n  // useMethod,\n  changeLog,\n  implementedMethods,\n} = useSudokuSolverComposable()\n\nconst isInSolveMode = ref(false)\nconst isNoMoreOptions = ref(false)\nconst executedMethodsData: Ref<ExecutedMethodsData> = ref({} as ExecutedMethodsData)\n\n// const initialField = ref([\n//   ['5', '3', '', '', '7', '', '', '', ''],\n//   ['6', '', '', '1', '9', '5', '', '', ''],\n//   ['', '9', '8', '', '', '', '', '6', ''],\n//   ['8', '', '', '', '6', '', '', '', '3'],\n//   ['4', '', '', '8', '', '3', '', '', ''],\n//   ['7', '', '', '', '2', '', '', '', '6'],\n//   ['', '6', '', '', '', '', '2', '8', ''],\n//   ['', '', '', '4', '1', '9', '', '', '5'],\n//   ['', '', '', '', '8', '', '', '7', '9'],\n// ])\n\n// const initialField = ref([\n//   ['1', '', '', '', '9', '', '', '', '6'],\n//   ['', '', '3', '7', '', '2', '', '9', '1'],\n//   ['', '9', '', '4', '', '', '', '7', ''],\n//   ['3', '', '9', '', '7', '', '6', '2', ''],\n//   ['', '6', '', '', '5', '', '8', '', '9'],\n//   ['', '8', '2', '6', '3', '9', '', '', ''],\n//   ['9', '', '', '3', '', '7', '', '6', ''],\n//   ['2', '', '6', '', '', '', '9', '8', ''],\n//   ['5', '3', '', '9', '', '', '7', '', ''],\n// ])\n\n// // done\n// const initialField = ref([\n//   ['5', '', '', '2', '', '', '', '4', ''],\n//   ['', '', '', '6', '', '3', '', '', ''],\n//   ['', '3', '', '', '', '9', '', '', '7'],\n//   ['', '', '3', '', '', '7', '', '', ''],\n//   ['', '', '7', '', '', '8', '', '', ''],\n//   ['6', '', '', '', '', '', '', '2', ''],\n//   ['', '8', '', '', '', '', '', '', '3'],\n//   ['', '', '', '4', '', '', '6', '', ''],\n//   ['', '', '', '1', '', '', '5', '', ''],\n// ])\n\n// done\nconst initialField = ref([\n  ['6', '', '7', '9', '', '', '2', '', '3'],\n  ['9', '', '3', '4', '2', '', '8', '6', ''],\n  ['', '', '', '', '8', '3', '', '', '1'],\n  ['5', '3', '', '', '6', '', '9', '', '2'],\n  ['', '', '', '', '', '', '', '3', '7'],\n  ['4', '', '', '1', '3', '2', '5', '', ''],\n  ['', '4', '', '', '7', '', '6', '', '9'],\n  ['7', '2', '', '', '', '', '', '', ''],\n  ['8', '9', '1', '2', '5', '', '', '7', ''],\n])\n\n// done\n// x-wing row\n// const initialField = ref([\n//   ['', '', '3', '8', '', '', '5', '1', ''],\n//   ['', '', '8', '7', '', '', '9', '3', ''],\n//   ['1', '', '', '3', '', '5', '7', '2', '8'],\n//   ['', '', '', '2', '', '', '8', '4', '9'],\n//   ['8', '', '1', '9', '', '6', '2', '5', '7'],\n//   ['', '', '', '5', '', '', '1', '6', '3'],\n//   ['9', '6', '4', '1', '2', '7', '3', '8', '5'],\n//   ['3', '8', '2', '6', '5', '9', '4', '7', '1'],\n//   ['', '1', '', '4', '', '', '6', '9', '2'],\n// ])\n\n// x-wing column\n// const initialField = ref([\n//   ['', '2', '', '', '', '', '', '9', '4'],\n//   ['7', '6', '', '9', '1', '', '', '5', ''],\n//   ['', '9', '', '', '', '2', '', '8', '1'],\n//   ['', '7', '', '', '5', '', '', '1', ''],\n//   ['', '', '', '7', '', '9', '', '', ''],\n//   ['', '8', '', '', '3', '1', '', '6', '7'],\n//   ['2', '4', '', '1', '', '', '', '7', ''],\n//   ['', '1', '', '', '9', '', '', '4', '5'],\n//   ['9', '', '', '', '', '', '1', '', ''],\n// ])\n\n// y-wing column\n// const initialField = ref([\n//   ['9', '', '', '2', '4', '', '', '', ''],\n//   ['', '5', '', '6', '9', '', '2', '3', '1'],\n//   ['', '2', '', '', '5', '', '', '9', ''],\n//   ['', '9', '', '7', '', '', '3', '2', ''],\n//   ['', '', '2', '9', '3', '5', '6', '', '7'],\n//   ['', '7', '', '', '', '2', '9', '', ''],\n//   ['', '6', '9', '', '2', '', '', '7', '3'],\n//   ['5', '1', '', '', '7', '9', '', '6', '2'],\n//   ['2', '', '7', '', '8', '6', '', '', '9'],\n// ])\n\n// const initialField = ref([\n//   ['', '', '', '', '', '', '', '', ''],\n//   ['', '', '', '', '', '', '', '', ''],\n//   ['', '', '', '', '', '', '', '', ''],\n//   ['', '', '', '', '', '', '', '', ''],\n//   ['', '', '', '', '', '', '', '', ''],\n//   ['', '', '', '', '', '', '', '', ''],\n//   ['', '', '', '', '', '', '', '', ''],\n//   ['', '', '', '', '', '', '', '', ''],\n//   ['', '', '', '', '', '', '', '', ''],\n// ])\n\nconst lastUpdatedCells = computed(() => Object.values(executedMethodsData.value).reduce(\n  (accumulator, updatedCells) => accumulator.concat(updatedCells),\n  [],\n))\n\nfunction turnToSolvingMode() {\n  console.log('initialField', initialField)\n  initSudokuSolver(initialField.value)\n  isInSolveMode.value = true\n}\n\nfunction resetExecutedMethodsData() {\n  executedMethodsData.value = {} as ExecutedMethodsData\n}\n\n// function tryMethod(method: Method) {\n//   resetExecutedMethodsData()\n//   console.log(useMethod(method))\n// }\n\nfunction tryToExecuteMethodsSequentially() {\n  resetExecutedMethodsData()\n  executedMethodsData.value = executeMethodsSequentially()\n  console.log('isNoMoreOptions', !lastUpdatedCells.value.length, lastUpdatedCells.value)\n  if (!lastUpdatedCells.value.length) {\n    isNoMoreOptions.value = true\n  }\n}\n\nfunction tryToBackToLastState() {\n  isNoMoreOptions.value = false\n  resetExecutedMethodsData()\n  backToLastState()\n}\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _cache[2] || (_cache[2] = _createElementVNode(\"p\", { class: \"title\" }, \"Human-Like Sudoku Solver\", -1)),\n    _createElementVNode(\"div\", _hoisted_2, [\n      _createElementVNode(\"div\", _hoisted_3, [\n        _createVNode(SudokuBoard, {\n          modelValue: initialField.value,\n          \"onUpdate:modelValue\": _cache[0] || (_cache[0] = ($event: any) => ((initialField).value = $event)),\n          isInSolveMode: isInSolveMode.value,\n          solvedField: _unref(resultField),\n          lastUpdated: lastUpdatedCells.value\n        }, null, 8, [\"modelValue\", \"isInSolveMode\", \"solvedField\", \"lastUpdated\"])\n      ]),\n      _createElementVNode(\"div\", _hoisted_4, [\n        (!isInSolveMode.value)\n          ? (_openBlock(), _createElementBlock(\"button\", {\n              key: 0,\n              class: \"button\",\n              onClick: turnToSolvingMode\n            }, \"Start\"))\n          : _createCommentVNode(\"\", true),\n        (isInSolveMode.value)\n          ? (_openBlock(), _createElementBlock(\"div\", _hoisted_5, [\n              _createElementVNode(\"button\", {\n                class: \"button\",\n                disabled: isNoMoreOptions.value || _unref(isSolved),\n                onClick: _cache[1] || (_cache[1] = ($event: any) => (tryToExecuteMethodsSequentially()))\n              }, \"Next\", 8, _hoisted_6),\n              _createElementVNode(\"button\", {\n                class: \"button warning\",\n                onClick: tryToBackToLastState\n              }, [\n                _createVNode(IconBase, {\n                  width: 24,\n                  height: 24,\n                  \"icon-name\": \"back\"\n                }, {\n                  default: _withCtx(() => [\n                    _createVNode(IconBack)\n                  ]),\n                  _: 1\n                })\n              ])\n            ]))\n          : _createCommentVNode(\"\", true),\n        (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_unref(implementedMethods), (method, idx) => {\n          return (_openBlock(), _createElementBlock(\"div\", {\n            class: \"method-data\",\n            key: `${idx}-${method}`\n          }, [\n            _createElementVNode(\"div\", _hoisted_7, [\n              (executedMethodsData.value[method.key])\n                ? (_openBlock(), _createBlock(IconBase, {\n                    key: 0,\n                    width: 20,\n                    height: 20,\n                    \"icon-name\": \"check\",\n                    class: _normalizeClass([\"done\", { 'updated': executedMethodsData.value[method.key].length }])\n                  }, {\n                    default: _withCtx(() => [\n                      _createVNode(IconCheck)\n                    ]),\n                    _: 2\n                  }, 1032, [\"class\"]))\n                : _createCommentVNode(\"\", true)\n            ]),\n            _createElementVNode(\"a\", {\n              href: method.links[0],\n              target: \"_blank\"\n            }, _toDisplayString(method.key), 9, _hoisted_8)\n          ]))\n        }), 128)),\n        (isNoMoreOptions.value)\n          ? (_openBlock(), _createElementBlock(\"div\", _hoisted_9, \" Implemented Strategies can not solve this. Please add more data to solve Sudoku \"))\n          : _createCommentVNode(\"\", true)\n      ])\n    ]),\n    (_unref(changeLog).length)\n      ? (_openBlock(), _createElementBlock(\"div\", _hoisted_10, [\n          _createVNode(HistoryLog, { changeLog: _unref(changeLog) }, null, 8, [\"changeLog\"])\n        ]))\n      : _createCommentVNode(\"\", true)\n  ]))\n}\n}\n\n})","<template>\n  <div class=\"page\">\n    <p class=\"title\">Human-Like Sudoku Solver</p>\n    <div class=\"content main\">\n      <div class=\"board-container\">\n        <SudokuBoard v-model:modelValue=\"initialField\" :isInSolveMode=\"isInSolveMode\" :solvedField=\"resultField\"\n          :lastUpdated=\"lastUpdatedCells\" />\n      </div>\n\n      <div class=\"methods-container\">\n        <button v-if=\"!isInSolveMode\" class=\"button\" @click=\"turnToSolvingMode\">Start</button>\n\n        <div class=\"controls\" v-if=\"isInSolveMode\">\n          <button class=\"button\" :disabled=\"isNoMoreOptions || isSolved\"\n            @click=\"tryToExecuteMethodsSequentially()\">Next</button>\n          <button class=\"button warning\" @click=\"tryToBackToLastState\">\n            <IconBase :width=\"24\" :height=\"24\" icon-name=\"back\">\n              <IconBack />\n            </IconBase>\n          </button>\n        </div>\n\n        <div class=\"method-data\" v-for=\"method, idx in implementedMethods\" :key=\"`${idx}-${method}`\">\n          <div class=\"method-status\">\n            <IconBase v-if=\"executedMethodsData[method.key]\" :width=\"20\" :height=\"20\" icon-name=\"check\" class=\"done\"\n              :class=\"{ 'updated': executedMethodsData[method.key].length }\">\n              <IconCheck />\n            </IconBase>\n          </div>\n          <a :href=\"method.links[0]\" target=\"_blank\">{{ method.key }}</a>\n          <!-- <button v-if=\"isInSolveMode\" class=\"button temp\"  @click=\"tryMethod(method.key)\">Try</button> -->\n        </div>\n\n        <div v-if=\"isNoMoreOptions\">\n          Implemented Strategies can not solve this. Please add more data to solve Sudoku\n        </div>\n      </div>\n    </div>\n\n    <div v-if=\"changeLog.length\" class=\"content history\">\n      <HistoryLog :changeLog=\"changeLog\" />\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { ref, Ref, computed } from 'vue'\nimport IconBase from '@/components/IconBase.vue'\nimport IconBack from '@/components/icons/IconBack.vue'\nimport IconCheck from '@/components/icons/IconCheck.vue'\nimport SudokuBoard from '@/components/SudokuBoard.vue'\nimport HistoryLog from '@/components/HistoryLog.vue'\nimport { useSudokuSolverComposable } from '@/composables/sudokuSolver'\n\n// import Method from '@/types/Method'\nimport ExecutedMethodsData from '@/types/ExecutedMethodsData'\n\nconst {\n  isSolved,\n  field: resultField,\n  initSudokuSolver,\n  executeMethodsSequentially,\n  backToLastState,\n  // useMethod,\n  changeLog,\n  implementedMethods,\n} = useSudokuSolverComposable()\n\nconst isInSolveMode = ref(false)\nconst isNoMoreOptions = ref(false)\nconst executedMethodsData: Ref<ExecutedMethodsData> = ref({} as ExecutedMethodsData)\n\n// const initialField = ref([\n//   ['5', '3', '', '', '7', '', '', '', ''],\n//   ['6', '', '', '1', '9', '5', '', '', ''],\n//   ['', '9', '8', '', '', '', '', '6', ''],\n//   ['8', '', '', '', '6', '', '', '', '3'],\n//   ['4', '', '', '8', '', '3', '', '', ''],\n//   ['7', '', '', '', '2', '', '', '', '6'],\n//   ['', '6', '', '', '', '', '2', '8', ''],\n//   ['', '', '', '4', '1', '9', '', '', '5'],\n//   ['', '', '', '', '8', '', '', '7', '9'],\n// ])\n\n// const initialField = ref([\n//   ['1', '', '', '', '9', '', '', '', '6'],\n//   ['', '', '3', '7', '', '2', '', '9', '1'],\n//   ['', '9', '', '4', '', '', '', '7', ''],\n//   ['3', '', '9', '', '7', '', '6', '2', ''],\n//   ['', '6', '', '', '5', '', '8', '', '9'],\n//   ['', '8', '2', '6', '3', '9', '', '', ''],\n//   ['9', '', '', '3', '', '7', '', '6', ''],\n//   ['2', '', '6', '', '', '', '9', '8', ''],\n//   ['5', '3', '', '9', '', '', '7', '', ''],\n// ])\n\n// // done\n// const initialField = ref([\n//   ['5', '', '', '2', '', '', '', '4', ''],\n//   ['', '', '', '6', '', '3', '', '', ''],\n//   ['', '3', '', '', '', '9', '', '', '7'],\n//   ['', '', '3', '', '', '7', '', '', ''],\n//   ['', '', '7', '', '', '8', '', '', ''],\n//   ['6', '', '', '', '', '', '', '2', ''],\n//   ['', '8', '', '', '', '', '', '', '3'],\n//   ['', '', '', '4', '', '', '6', '', ''],\n//   ['', '', '', '1', '', '', '5', '', ''],\n// ])\n\n// done\nconst initialField = ref([\n  ['6', '', '7', '9', '', '', '2', '', '3'],\n  ['9', '', '3', '4', '2', '', '8', '6', ''],\n  ['', '', '', '', '8', '3', '', '', '1'],\n  ['5', '3', '', '', '6', '', '9', '', '2'],\n  ['', '', '', '', '', '', '', '3', '7'],\n  ['4', '', '', '1', '3', '2', '5', '', ''],\n  ['', '4', '', '', '7', '', '6', '', '9'],\n  ['7', '2', '', '', '', '', '', '', ''],\n  ['8', '9', '1', '2', '5', '', '', '7', ''],\n])\n\n// done\n// x-wing row\n// const initialField = ref([\n//   ['', '', '3', '8', '', '', '5', '1', ''],\n//   ['', '', '8', '7', '', '', '9', '3', ''],\n//   ['1', '', '', '3', '', '5', '7', '2', '8'],\n//   ['', '', '', '2', '', '', '8', '4', '9'],\n//   ['8', '', '1', '9', '', '6', '2', '5', '7'],\n//   ['', '', '', '5', '', '', '1', '6', '3'],\n//   ['9', '6', '4', '1', '2', '7', '3', '8', '5'],\n//   ['3', '8', '2', '6', '5', '9', '4', '7', '1'],\n//   ['', '1', '', '4', '', '', '6', '9', '2'],\n// ])\n\n// x-wing column\n// const initialField = ref([\n//   ['', '2', '', '', '', '', '', '9', '4'],\n//   ['7', '6', '', '9', '1', '', '', '5', ''],\n//   ['', '9', '', '', '', '2', '', '8', '1'],\n//   ['', '7', '', '', '5', '', '', '1', ''],\n//   ['', '', '', '7', '', '9', '', '', ''],\n//   ['', '8', '', '', '3', '1', '', '6', '7'],\n//   ['2', '4', '', '1', '', '', '', '7', ''],\n//   ['', '1', '', '', '9', '', '', '4', '5'],\n//   ['9', '', '', '', '', '', '1', '', ''],\n// ])\n\n// y-wing column\n// const initialField = ref([\n//   ['9', '', '', '2', '4', '', '', '', ''],\n//   ['', '5', '', '6', '9', '', '2', '3', '1'],\n//   ['', '2', '', '', '5', '', '', '9', ''],\n//   ['', '9', '', '7', '', '', '3', '2', ''],\n//   ['', '', '2', '9', '3', '5', '6', '', '7'],\n//   ['', '7', '', '', '', '2', '9', '', ''],\n//   ['', '6', '9', '', '2', '', '', '7', '3'],\n//   ['5', '1', '', '', '7', '9', '', '6', '2'],\n//   ['2', '', '7', '', '8', '6', '', '', '9'],\n// ])\n\n// const initialField = ref([\n//   ['', '', '', '', '', '', '', '', ''],\n//   ['', '', '', '', '', '', '', '', ''],\n//   ['', '', '', '', '', '', '', '', ''],\n//   ['', '', '', '', '', '', '', '', ''],\n//   ['', '', '', '', '', '', '', '', ''],\n//   ['', '', '', '', '', '', '', '', ''],\n//   ['', '', '', '', '', '', '', '', ''],\n//   ['', '', '', '', '', '', '', '', ''],\n//   ['', '', '', '', '', '', '', '', ''],\n// ])\n\nconst lastUpdatedCells = computed(() => Object.values(executedMethodsData.value).reduce(\n  (accumulator, updatedCells) => accumulator.concat(updatedCells),\n  [],\n))\n\nfunction turnToSolvingMode() {\n  console.log('initialField', initialField)\n  initSudokuSolver(initialField.value)\n  isInSolveMode.value = true\n}\n\nfunction resetExecutedMethodsData() {\n  executedMethodsData.value = {} as ExecutedMethodsData\n}\n\n// function tryMethod(method: Method) {\n//   resetExecutedMethodsData()\n//   console.log(useMethod(method))\n// }\n\nfunction tryToExecuteMethodsSequentially() {\n  resetExecutedMethodsData()\n  executedMethodsData.value = executeMethodsSequentially()\n  console.log('isNoMoreOptions', !lastUpdatedCells.value.length, lastUpdatedCells.value)\n  if (!lastUpdatedCells.value.length) {\n    isNoMoreOptions.value = true\n  }\n}\n\nfunction tryToBackToLastState() {\n  isNoMoreOptions.value = false\n  resetExecutedMethodsData()\n  backToLastState()\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.page {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  a {\n    text-decoration: none;\n  }\n\n  .title {\n    font-size: 30px;\n  }\n\n  .content {\n    display: flex;\n    flex-direction: row;\n    gap: 40px;\n    justify-content: center;\n    max-width: 900px;\n\n    &.history {\n      margin-top: 20px;\n      width: 100%;\n    }\n\n    &>* {\n      max-height: 569px;\n    }\n\n    @media (max-width: 700px) {\n      flex-direction: column;\n    }\n  }\n\n  .board-container {\n    display: flex;\n    flex-direction: column;\n    gap: 20px;\n  }\n\n  .methods-container {\n    display: flex;\n    flex-direction: column;\n    justify-content: start;\n    align-items: start;\n\n    .controls {\n      width: 100%;\n      display: flex;\n      flex-direction: row;\n      justify-content: space-between;\n      margin-bottom: 20px;\n    }\n\n    .method-data {\n      display: flex;\n\n      .method-status {\n        width: 20px;\n        height: 20px;\n\n        .done {\n          color: var(--warning);\n        }\n\n        .updated {\n          color: var(--success);\n        }\n      }\n    }\n  }\n\n  .button {\n    max-width: 150px;\n\n    &.warning {\n      padding: 8px;\n    }\n\n    &.temp {\n      background-color: lightgray;\n      height: 20px;\n      padding: 0 10px;\n      margin-left: 10px;\n    }\n  }\n}\n</style>\n","import script from \"./MainComponent.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./MainComponent.vue?vue&type=script&setup=true&lang=ts\"\n\nimport \"./MainComponent.vue?vue&type=style&index=0&id=14a36b82&lang=scss&scoped=true\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-14a36b82\"]])\n\nexport default __exports__","import { render } from \"./App.vue?vue&type=template&id=286c201f&ts=true\"\nimport script from \"./App.vue?vue&type=script&lang=ts\"\nexport * from \"./App.vue?vue&type=script&lang=ts\"\n\nimport \"./App.vue?vue&type=style&index=0&id=286c201f&lang=css\"\n\nimport exportComponent from \"../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { createStore } from 'vuex'\n\nexport default createStore({\n  state: {\n  },\n  getters: {\n  },\n  mutations: {\n  },\n  actions: {\n  },\n  modules: {\n  },\n})\n","import { createApp } from 'vue'\nimport App from './App.vue'\nimport store from './store'\n\ncreateApp(App).use(store).mount('#app')\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t524: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunksudoku_solver\"] = self[\"webpackChunksudoku_solver\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [504], function() { return __webpack_require__(85); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["render","_ctx","_cache","$props","$setup","$data","$options","_component_MainComponent","_resolveComponent","_openBlock","_createBlock","_hoisted_1","_hoisted_2","_hoisted_3","_defineComponent","__name","props","iconName","default","width","height","iconColor","setup","__props","_createElementBlock","xmlns","viewBox","role","_createElementVNode","id","lang","_toDisplayString","fill","_renderSlot","$slots","__exports__","version","d","script","class","key","_hoisted_4","_hoisted_5","modelValue","solvedField","lastUpdated","isInSolveMode","type","Boolean","emits","emit","__emit","model","computed","get","set","value","console","log","isNumeric","string","test","triggerUpdate","rowIdx","colIdx","event","data","newModel","map","row","slice","target","fieldLength","length","watch","_Fragment","_renderList","_normalizeClass","includes","withPresetValue","isEmpty","index","possibleNumbers","_createCommentVNode","maxlength","onInput","changeLog","revertedArray","reverse","line","idx","action","cell","columnIdx","description","basedOn","Method","intersection","arr1","arr2","filter","symmetricDifference","unique","arr","Set","getAllCommonElements","set1","element","has","ChangeLogLine","constructor","_defineProperty","this","History","stack","currentChangeLog","ref","fieldState","changeLogState","saveToChangeLog","push","addNewState","field","JSON","parse","stringify","backToLastState","pop","Cell","maxVal","saveToHistory","currentNumber","Number","Array","from","_","i","undefined","isReadyToUpdateValue","isEqual","otherCell","every","num","removeOccupiedValues","occupiedNumbers","valuesToRemove","el","sort","join","setPossibleValues","values","updateValue","setValues","getAllUniqueNumbers","array","allNumbers","forEach","getAllPairs","allPairs","j","getAllTriples","allTriples","k","isArrayExistsInSet","pair","getAllCommonPairs","cellX","cellY","commonPairs","allCellXPairs","allCellYPairs","getAllCommonTriples","cellZ","commonTriples","allCellXTriples","allCellYTriples","allCellZTriples","triples","isNumbersInOtherCells","cells","isNumbersInCellsEqual","getCellHiddenSingle","cellsToCheck","numbers","getCellHiddenPair","pairs","getCellHiddenTriple","getCellObviousPair","getCellObviousTriple","allUniqueNumbers","HiddenNs","getCellHiddenNs","n","getCellObviousNs","isNumberInSquareJustAtTheSameRow","number","isNumberInSquareJustAtTheSameColumn","isNumberInOtherCells","state","reactive","isSolved","useSudokuSolverComposable","historyLog","squareLength","implementedMethods","UpdateNotes","links","ObviousSingles","ObviousPairs","ObviousTriples","HiddenSingles","HiddenPairs","HiddenTriples","PointingNumbers","XWing","YWing","findCellsSquareFirstRow","findCellsSquareFirstColumn","isAtTheSameRow","isAtTheSameColumn","getSquareEmptyCells","exceptSelected","squareFirstRow","squareFirstColumn","squareEmptyCells","isFieldChanged","getLastUpdatedCells","updatedCells","checkCellSurroundings","rowValue","colValue","cellValue","checkAllCellsSurroundings","checkForHiddenNs","rowCellsToCheck","columnCellsToCheck","squareCellsToCheck","rowHiddenN","pairedCell","columnHiddenN","squareHiddenN","checkForObviousNs","rowObviousN","columnObviousN","squareObviousN","checkForPointingNumbers","checkWithXWingRows","cellXX","rowXAllEmptyCells","rowXCellsToCheck","l","cellYX","rowYAllEmptyCells","cellXY","cellYY","m","checkWithXWingColumns","columnXAllEmptyCells","columnXCellsToCheck","columnYAllEmptyCells","checkWithXWing","checkWithYWing","pivotCell","rowPincerCells","columnPincerCells","squarePincerCells","commonElementsWithPivot","commonElements","pivotCellSquareCellsToCheck","rowCellSquareCellsToCheck","concat","columnCellSquareCellsToCheck","useMethod","methodKey","lastUpdatedCells","executeMethodsSequentially","methodKeys","Object","executedMethods","some","method","initSudokuSolver","fieldData","fieldRow","toRefs","_hoisted_6","_hoisted_7","_hoisted_8","_hoisted_9","_hoisted_10","resultField","isNoMoreOptions","executedMethodsData","initialField","reduce","accumulator","turnToSolvingMode","resetExecutedMethodsData","tryToExecuteMethodsSequentially","tryToBackToLastState","_createVNode","SudokuBoard","$event","_unref","onClick","disabled","IconBase","_withCtx","IconBack","IconCheck","href","HistoryLog","App","Vue","__decorate","Options","components","MainComponent","createStore","getters","mutations","actions","modules","createApp","use","store","mount","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","call","deferred","O","result","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","keys","splice","r","getter","__esModule","a","definition","o","defineProperty","enumerable","g","globalThis","Function","e","window","obj","prop","prototype","hasOwnProperty","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal","self","bind","__webpack_exports__"],"sourceRoot":""}